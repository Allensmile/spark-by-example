* SPARK by Example

  SPARK by Example is a project (greatly) inspired by [[https://github.com/fraunhoferfokus/acsl-by-example][ACSL by Example]], a
  collection of verified C functions and data types from the C++
  standard library. SPARK by Example has two objectives

  - implement and verify the same functions as ACSL by Example using
    SPARK 2014 (a programming language based on Ada)
  - highlight differences between verification of C programs and
    verification of SPARK programs

** Tools used

   [[https://www.adacore.com/community][GNAT Community 2018]] has been used for this project. You may
   download and install it using the previous link.

** Content of each directory

   Each directory corresponds to a chapter of ACSL by Example. For each
   algorithm ~Algo~ to be proved, you will find the specification of
   ~Algo~ in the ~algo_p.ads~ file and its implementation if the
   ~algo_p.adb~ file. Specifications and implementations are defined in
   packages. To avoid name clashes with functions, packages names have a
   ~_P~ suffixes, hence the file names.

   Ghost functions that may be used in several algorithms are grouped in
   the ~spec~ directory at the root of the project.

   A makefile is provided for each chapter with some default values for
   provers timeouts, levels of proof etc. These default values are
   sufficient to prove the corresponding algorithms with the previous
   tools on a machine equipped with an Intel Core i7-4810MQ CPU.

** Table of contents

  1. [[./non-mutating/README.org][non mutating algorithms]]

** References

  - [[http://docs.adacore.com/spark2014-docs/html/ug/index.html][SPARK 2014 user guide 19.0]]

# Local Variables:
# ispell-dictionary: "english"
# flyspell-mode: 1
# End:
