_SUBPROG_FILTER = $(if $(SUBP_FILTER),--limit-subp=$(SUBP_FILTER),)
_LINE_FILTER = $(if $(LINE_FILTER),--limit-line=$(LINE_FILTER),)
_LEVEL = $(if $(LEVEL),--level=$(LEVEL),--level=0)
_TIMEOUT = $(if $(TIMEOUT),--timeout=$(TIMEOUT),--timeout=0)
_PARALLEL = $(if $(PARALLEL),-j $(PARALLEL),-j 0)
_PROJECT = $(if $(PROJECT),-P $(PROJECT),-P spark_by_example.gpr)
_WHYCONF = $(if $(WHYCONF),--why3-conf=$(WHYCONF),)
_DEBUG = $(if $(DEBUG),-d -v,)
_STATS = $(if $(STATS),> ../stats/$(FILE).stdout;python ../stats/parse_stdout.py ../stats/$(FILE); cp gnatprove/gnatprove.out ../stats/$(FILE).out;python ../stats/generate_csv_function.py ../stats/$(FILE),)

GENERATE_DEP = $1_p.ads $1_p.adb

.PHONY: prove prove-coq all pp clean distclean run-tests

pp:
	gnatpp $(_PROJECT) -rnb

clean:
	gnatclean $(_PROJECT)
	gprclean tests/harness/test_driver.gpr
	- rm -rf *~

distclean: clean
	- rm -rf gnatprove auto.cgpr

test_%: test_%.adb
	gnatmake -gnata -gnateE -f $^
	./$@

generate-tests:
	gnattest $(_PROJECT)

run-tests:
	gprbuild tests/harness/test_driver.gpr
	./tests/harness/test_runner

prove:
	gnatprove $(_DEBUG) $(_PROJECT) -f $(_PARALLEL) $(_LINE_FILTER) $(_SUBPROG_FILTER) $(_WHYCONF) $(_LEVEL) $(_TIMEOUT) $(FILE) $(_STATS)

prove-coq:
	gnatprove --prover=coq $(_PROJECT) -f $(_PARALLEL) $(_LINE_FILTER) $(_SUBPROG_FILTER) $(_WHYCONF) $(FILE)
	$(_STATS)

# Local Variables:
# mode: makefile
# End:
